const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

const responses = [
    '–ë–µ—Å—Å–ø–æ—Ä–Ω–æ',
    '–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ',
    '–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π',
    '–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞',
    '–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º',
    '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª',
    '–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ',
    '–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã',
    '–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª',
    '–î–∞',
    '–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞',
    '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ',
    '–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å',
    '–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å',
    '–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å',
    '–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π',
    '–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª',
    '–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª',
    '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ',
    '–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ'
];

module.exports = {
    data: new SlashCommandBuilder()
        .setName('8ball')
        .setDescription('–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π')
        .addStringOption(option =>
            option.setName('question')
                .setDescription('–í–∞—à –≤–æ–ø—Ä–æ—Å')
                .setRequired(true)),
    async execute(interaction) {
        const question = interaction.options.getString('question');
        const answer = responses[Math.floor(Math.random() * responses.length)];

        const embed = new EmbedBuilder()
            .setColor(config.colors.fun)
            .setTitle('üé± –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä')
            .addFields(
                { name: '–í–æ–ø—Ä–æ—Å', value: question },
                { name: '–û—Ç–≤–µ—Ç', value: answer }
            );

        await interaction.reply({ embeds: [embed] });
    }
};