const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('rps')
        .setDescription('–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞')
        .addStringOption(option =>
            option.setName('choice')
                .setDescription('–í–∞—à –≤—ã–±–æ—Ä')
                .setRequired(true)
                .addChoices(
                    { name: '–ö–∞–º–µ–Ω—å', value: 'rock' },
                    { name: '–ù–æ–∂–Ω–∏—Ü—ã', value: 'scissors' },
                    { name: '–ë—É–º–∞–≥–∞', value: 'paper' }
                )),
    async execute(interaction) {
        const userChoice = interaction.options.getString('choice');
        const choices = ['rock', 'paper', 'scissors'];
        const botChoice = choices[Math.floor(Math.random() * choices.length)];

        const getResult = (user, bot) => {
            if (user === bot) return '–ù–∏—á—å—è!';
            if (
                (user === 'rock' && bot === 'scissors') ||
                (user === 'scissors' && bot === 'paper') ||
                (user === 'paper' && bot === 'rock')
            ) return '–í—ã –ø–æ–±–µ–¥–∏–ª–∏!';
            return '–ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!';
        };

        const result = getResult(userChoice, botChoice);

        const emojis = {
            rock: 'ü™®',
            paper: 'üìÑ',
            scissors: '‚úÇÔ∏è'
        };

        const embed = new EmbedBuilder()
            .setColor(config.colors.fun)
            .setTitle('–ö–∞–º–µ–Ω—å ü™® –ù–æ–∂–Ω–∏—Ü—ã ‚úÇÔ∏è –ë—É–º–∞–≥–∞ üìÑ')
            .addFields(
                { name: '–í–∞—à –≤—ã–±–æ—Ä', value: `${emojis[userChoice]} ${userChoice}`, inline: true },
                { name: '–í—ã–±–æ—Ä –±–æ—Ç–∞', value: `${emojis[botChoice]} ${botChoice}`, inline: true },
                { name: '–†–µ–∑—É–ª—å—Ç–∞—Ç', value: result }
            );

        await interaction.reply({ embeds: [embed] });
    }
};