const { SlashCommandBuilder } = require('discord.js');
const { useMainPlayer } = require('discord-player');
const { EmbedBuilder } = require('discord.js');
const ytdl = require('ytdl-core');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('play')
    .setDescription('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É —Å YouTube, Spotify –∏ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º')
    .addStringOption(option =>
      option.setName('query')
        .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏–ª–∏ URL')
        .setRequired(true)),

  async execute(interaction) {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if (!interaction.member.voice.channel) {
      return interaction.reply({
        content: '‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!',
        flags: 1 << 6,
        ephemeral: true
      }).catch(console.error);
    }

    // 2. –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ 15 –º–∏–Ω—É—Ç)
    if (!interaction.deferred && !interaction.replied) {
      await interaction.deferReply({ ephemeral: false });
    }

    const player = useMainPlayer();
    const query = interaction.options.getString('query');
    const channel = interaction.member.voice.channel;

    try {
      // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL YouTube
      if (query.includes('youtube.com') || query.includes('youtu.be')) {
        if (!await ytdl.validateURL(query)) {
          return interaction.followUp({
            content: '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ YouTube',
            flags: 1 << 6
          }).catch(console.error);
        }
      }

      // 4. –ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–∞
      const searchResult = await player.search(query, {
        requestedBy: interaction.user,
        searchEngine: query.startsWith('http') ? 'auto' : 'youtube',
        fallbackSearchEngine: 'youtube',
        youtubeOptions: {
          useAPI: true // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π API –≤–º–µ—Å—Ç–æ —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞
        }
      });

      // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      if (!searchResult.hasTracks()) {
        return interaction.followUp({
          content: '‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å',
          flags: 1 << 6
        }).catch(console.error);
      }

      // 6. –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
      const { track } = await player.play(channel, searchResult, {
        nodeOptions: {
          metadata: {
            interaction, // –î–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
            channel: interaction.channel,
            client: interaction.client
          },
          volume: 60,
          leaveOnEmpty: true,
          leaveOnEmptyCooldown: 30000,
          leaveOnEnd: false,
          bufferingTimeout: 30000,
          preferBridgedMetadata: true,
          maxSize: 50,
          maxHistorySize: 50,
          ffmpegOptions: {
            beforeOptions: [
              '-reconnect', '1',
              '-reconnect_streamed', '1',
              '-reconnect_delay_max', '5'
            ],
            options: [
              '-vn',
              '-bufsize', '96k',
              '-af', 'dynaudnorm=f=150:g=15'
            ]
          }
        }
      });

      // 7. –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∞—Å–∏–≤–æ–≥–æ embed
      const embed = new EmbedBuilder()
        .setColor('#2ecc71')
        .setTitle('üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç')
        .setDescription(`[${track.title}](${track.url})`)
        .setThumbnail(track.thumbnail)
        .addFields(
          { name: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', value: track.duration, inline: true },
          { name: '–ó–∞–ø—Ä–æ—Å–∏–ª', value: track.requestedBy.toString(), inline: true }
        );

      await interaction.followUp({ 
        embeds: [embed],
        flags: 1 << 6
      }).catch(console.error);

    } catch (error) {
      console.error('Play command error:', error);
      
      // 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
      const errorMessage = error.message.includes('age restricted') 
        ? '‚ùå –í–∏–¥–µ–æ —Å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è'
        : '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: ' + error.message;

      if (interaction.deferred || interaction.replied) {
        await interaction.followUp({
          content: errorMessage,
          flags: 1 << 6
        }).catch(console.error);
      } else {
        await interaction.reply({
          content: errorMessage,
          flags: 1 << 6,
          ephemeral: true
        }).catch(console.error);
      }
    }
  }
};