const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('voice-kick')
        .setDescription('–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –≤—ã–≥–æ–Ω–∞')
                .setRequired(true)),
    async execute(interaction) {
        const user = interaction.options.getUser('user');
        const voiceChannel = interaction.member.voice.channel;
        const targetMember = await interaction.guild.members.fetch(user.id);

        if (!voiceChannel) {
            return interaction.reply({ 
                content: '‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', 
                ephemeral: true 
            });
        }

        if (!voiceChannel.permissionsFor(interaction.user).has('MOVE_MEMBERS')) {
            return interaction.reply({ 
                content: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º!', 
                ephemeral: true 
            });
        }

        if (!targetMember.voice?.channel || targetMember.voice.channel.id !== voiceChannel.id) {
            return interaction.reply({ 
                content: '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ!', 
                ephemeral: true 
            });
        }

        try {
            await targetMember.voice.disconnect();

            const embed = new EmbedBuilder()
                .setColor(config.colors.success)
                .setTitle('üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–≥–Ω–∞–Ω')
                .setDescription(`${user.tag} –±—ã–ª –≤—ã–≥–Ω–∞–Ω –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞`)
                .setFooter({ text: `–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: ${interaction.user.tag}` });

            await interaction.reply({ embeds: [embed], ephemeral: true });
        } catch (error) {
            console.error(error);
            await interaction.reply({ 
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥–æ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 
                ephemeral: true 
            });
        }
    },
};