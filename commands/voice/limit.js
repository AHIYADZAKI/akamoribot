const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('voice-limit')
        .setDescription('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ')
        .addIntegerOption(option =>
            option.setName('amount')
                .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (0 - –±–µ–∑ –ª–∏–º–∏—Ç–∞)')
                .setRequired(true)
                .setMinValue(0)
                .setMaxValue(99)),
    async execute(interaction) {
        const amount = interaction.options.getInteger('amount');
        const voiceChannel = interaction.member.voice.channel;

        if (!voiceChannel) {
            return interaction.reply({ 
                content: '‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', 
                ephemeral: true 
            });
        }

        if (!voiceChannel.permissionsFor(interaction.user).has('MANAGE_CHANNELS')) {
            return interaction.reply({ 
                content: '‚ùå –í—ã –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —ç—Ç–∏–º –∫–∞–Ω–∞–ª–æ–º!', 
                ephemeral: true 
            });
        }

        try {
            await voiceChannel.setUserLimit(amount);

            const embed = new EmbedBuilder()
                .setColor(config.colors.success)
                .setTitle('üî¢ –õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
                .setDescription(`–õ–∏–º–∏—Ç –∫–∞–Ω–∞–ª–∞ ${voiceChannel.name} –∏–∑–º–µ–Ω–µ–Ω`)
                .addFields(
                    { name: '–ù–æ–≤—ã–π –ª–∏–º–∏—Ç', value: amount === 0 ? '–ë–µ–∑ –ª–∏–º–∏—Ç–∞' : amount.toString(), inline: true }
                )
                .setFooter({ text: `–ò–∑–º–µ–Ω–µ–Ω–æ ${interaction.user.tag}` });

            await interaction.reply({ embeds: [embed], ephemeral: true });
        } catch (error) {
            console.error(error);
            await interaction.reply({ 
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞', 
                ephemeral: true 
            });
        }
    },
};