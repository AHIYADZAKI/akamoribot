const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');
const { musicQueue } = require('../../systems/musicHandler');
const lyricsFinder = require('lyrics-finder');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('lyrics')
        .setDescription('–ù–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏')
        .addStringOption(option =>
            option.setName('query')
                .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞)')
                .setRequired(false)),
    async execute(interaction) {
        const query = interaction.options.getString('query');
        const serverQueue = musicQueue.get(interaction.guild.id);

        if (!query && (!serverQueue || !serverQueue.songs.length)) {
            return interaction.reply({ 
                content: '‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç–µ —Ç—Ä–µ–∫!', 
                ephemeral: true 
            });
        }

        await interaction.deferReply();

        try {
            const searchQuery = query || `${serverQueue.songs[0].title} ${serverQueue.songs[0].requestedBy.username}`;
            const lyrics = await lyricsFinder(searchQuery) || '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ :(';

            const embed = new EmbedBuilder()
                .setColor(config.colors.primary)
                .setTitle(`üìù –¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏: ${searchQuery}`)
                .setDescription(lyrics.length > 4096 ? lyrics.slice(0, 4093) + '...' : lyrics)
                .setFooter({ text: `–ó–∞–ø—Ä–æ—Å–∏–ª ${interaction.user.tag}` });

            await interaction.editReply({ embeds: [embed] });
        } catch (error) {
            console.error(error);
            interaction.editReply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏');
        }
    },
};