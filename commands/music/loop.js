const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');
const { musicQueue } = require('../../systems/musicHandler');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('loop')
        .setDescription('–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞')
        .addStringOption(option =>
            option.setName('mode')
                .setDescription('–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞')
                .addChoices(
                    { name: '–í—ã–∫–ª—é—á–∏—Ç—å', value: 'off' },
                    { name: '–¢—Ä–µ–∫', value: 'track' },
                    { name: '–û—á–µ—Ä–µ–¥—å', value: 'queue' }
                )
                .setRequired(true)),
    async execute(interaction) {
        const mode = interaction.options.getString('mode');
        const serverQueue = musicQueue.get(interaction.guild.id);
        const voiceChannel = interaction.member.voice.channel;

        if (!voiceChannel) {
            return interaction.reply({ 
                content: '‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', 
                ephemeral: true 
            });
        }

        if (!serverQueue) {
            return interaction.reply({ 
                content: '‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è!', 
                ephemeral: true 
            });
        }

        if (voiceChannel.id !== serverQueue.voiceChannel.id) {
            return interaction.reply({ 
                content: '‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–æ–º –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ –∏ –±–æ—Ç!', 
                ephemeral: true 
            });
        }

        serverQueue.loop = mode;

        const modeText = {
            'off': 'üîÅ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω',
            'track': 'üîÇ –ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞',
            'queue': 'üîÅ –ü–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏'
        };

        const embed = new EmbedBuilder()
            .setColor(config.colors.success)
            .setTitle(modeText[mode])
            .setFooter({ text: `–ó–∞–ø—Ä–æ—Å–∏–ª ${interaction.user.tag}` });

        await interaction.reply({ embeds: [embed] });
    },
};