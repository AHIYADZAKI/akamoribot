const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../systems/database/models');
const { ShopItem, User } = require('../../systems/database/models');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('buy')
        .setDescription('–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞')
        .addStringOption(option =>
            option.setName('item_id')
                .setDescription('ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
                .setRequired(true)),
    async execute(interaction) {
        const itemId = interaction.options.getString('item_id');

        try {
            const item = await ShopItem.findById(itemId);
            if (!item) {
                return interaction.reply({ 
                    content: '‚ùå –¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω',
                    ephemeral: true 
                });
            }

            const user = await User.findOne({ 
                userId: interaction.user.id, 
                guildId: interaction.guild.id 
            });

            if (!user || user.balance < item.price) {
                return interaction.reply({ 
                    content: `‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ (–¶–µ–Ω–∞: ${item.price} ${config.currency})`,
                    ephemeral: true 
                });
            }

            await User.findOneAndUpdate(
                { userId: interaction.user.id, guildId: interaction.guild.id },
                { $inc: { balance: -item.price } }
            );

            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤—ã–¥–∞—á–∏ —Ç–æ–≤–∞—Ä–∞ (—Ä–æ–ª–∏ –∏ —Ç.–¥.)
            // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —ç—Ç–æ —Ä–æ–ª—å:
            // const member = await interaction.guild.members.fetch(interaction.user.id);
            // await member.roles.add(item.roleId);

            const embed = new EmbedBuilder()
                .setColor(config.colors.success)
                .setTitle('üõí –ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞')
                .setDescription(`–í—ã –∫—É–ø–∏–ª–∏ **${item.name}** –∑–∞ ${item.price} ${config.currency}`)
                .addFields(
                    { name: '–û–ø–∏—Å–∞–Ω–∏–µ', value: item.description }
                )
                .setFooter({ text: `–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${interaction.user.username}` });

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error(error);
            await interaction.reply({ 
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞',
                ephemeral: true 
            });
        }
    },
};