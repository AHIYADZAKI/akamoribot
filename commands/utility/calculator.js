const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('calculator')
        .setDescription('–ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è')
        .addStringOption(option =>
            option.setName('expression')
                .setDescription('–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2+2*3)')
                .setRequired(true)),
    async execute(interaction) {
        const expression = interaction.options.getString('expression');

        try {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
            const result = eval(expression.replace(/[^-()\d/*+.]/g, ''));

            const embed = new EmbedBuilder()
                .setColor(config.colors.primary)
                .setTitle('üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
                .addFields(
                    { name: '–í—ã—Ä–∞–∂–µ–Ω–∏–µ', value: expression, inline: true },
                    { name: '–†–µ–∑—É–ª—å—Ç–∞—Ç', value: result.toString(), inline: true }
                )
                .setFooter({ text: `–ó–∞–ø—Ä–æ—à–µ–Ω–æ ${interaction.user.tag}` });

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error(error);
            await interaction.reply({ 
                content: '‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ', 
                ephemeral: true 
            });
        }
    },
};