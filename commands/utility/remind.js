const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const config = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('remind')
        .setDescription('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ')
        .addStringOption(option =>
            option.setName('time')
                .setDescription('–í—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1h30m, 2d, 30m)')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('message')
                .setDescription('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è')
                .setRequired(true)),
    async execute(interaction) {
        const timeStr = interaction.options.getString('time');
        const message = interaction.options.getString('message');

        // –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1h30m, 2d, 30m)
        let ms = 0;
        const timeRegex = /(\d+)([dhm])/g;
        let match;
        
        while ((match = timeRegex.exec(timeStr)) !== null) {
            const value = parseInt(match[1]);
            const unit = match[2];
            
            if (unit === 'd') ms += value * 24 * 60 * 60 * 1000;
            else if (unit === 'h') ms += value * 60 * 60 * 1000;
            else if (unit === 'm') ms += value * 60 * 1000;
        }

        if (ms === 0) {
            return interaction.reply({ 
                content: '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–ø—Ä–∏–º–µ—Ä: 1h30m, 2d, 30m', 
                ephemeral: true 
            });
        }

        if (ms > 30 * 24 * 60 * 60 * 1000) { // 30 –¥–Ω–µ–π –º–∞–∫—Å–∏–º—É–º
            return interaction.reply({ 
                content: '‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è - 30 –¥–Ω–µ–π', 
                ephemeral: true 
            });
        }

        const endTime = Date.now() + ms;

        const embed = new EmbedBuilder()
            .setColor(config.colors.primary)
            .setTitle('üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
            .setDescription(`–Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º:\n"${message}"`)
            .addFields(
                { name: '–ß–µ—Ä–µ–∑', value: timeStr },
                { name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–∏–¥–µ—Ç', value: `<t:${Math.floor(endTime / 1000)}:R>` }
            )
            .setFooter({ text: `–î–ª—è ${interaction.user.tag}` });

        await interaction.reply({ embeds: [embed] });

        setTimeout(async () => {
            const notifyEmbed = new EmbedBuilder()
                .setColor(config.colors.success)
                .setTitle('üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!')
                .setDescription(message)
                .setFooter({ text: `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${timeStr} –Ω–∞–∑–∞–¥` });

            await interaction.user.send({ embeds: [notifyEmbed] }).catch(() => {
                interaction.followUp({ 
                    content: `${interaction.user}`, 
                    embeds: [notifyEmbed] 
                });
            });
        }, ms);
    },
};