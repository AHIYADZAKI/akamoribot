const { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } = require('discord.js');
const config = require('../../config');
const Application = require('../../database/models/Application');

module.exports = {
    customId: 'staff-apply',
    async execute(interaction) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∞–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—è–≤–∫—É —Ä–∞–Ω–µ–µ
            const existingApp = await Application.findOne({ 
                userId: interaction.user.id,
                status: { $ne: 'rejected' }
            });

            if (existingApp) {
                return interaction.reply({
                    content: '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞!',
                    ephemeral: true
                });
            }

            // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞—è–≤–∫–∏
            const embed = new EmbedBuilder()
                .setColor(config.colors.primary)
                .setTitle('üìù –ó–∞—è–≤–∫–∞ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª')
                .setDescription('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:')
                .addFields(
                    { name: '1. –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç', value: '–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç' },
                    { name: '2. –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã', value: '–ë—ã–ª –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏?' },
                    { name: '3. –ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª?', value: '–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –º–æ—Ç–∏–≤—ã' }
                );

            const row = new ActionRowBuilder().addComponents(
                new ButtonBuilder()
                    .setCustomId('cancel-application')
                    .setLabel('–û—Ç–º–µ–Ω–∞')
                    .setStyle(ButtonStyle.Danger)
            );

            await interaction.showModal({
                customId: 'staff-application-modal',
                title: '–ó–∞—è–≤–∫–∞ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª',
                components: [
                    {
                        type: 1,
                        components: [{
                            type: 4,
                            customId: 'age',
                            label: '–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç',
                            style: 1,
                            minLength: 1,
                            maxLength: 2,
                            required: true
                        }]
                    },
                    {
                        type: 1,
                        components: [{
                            type: 4,
                            customId: 'experience',
                            label: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã',
                            style: 2,
                            minLength: 10,
                            maxLength: 500,
                            required: true
                        }]
                    },
                    {
                        type: 1,
                        components: [{
                            type: 4,
                            customId: 'motivation',
                            label: '–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª?',
                            style: 2,
                            minLength: 20,
                            maxLength: 1000,
                            required: true
                        }]
                    }
                ]
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ staffApplication:', error);
            await interaction.reply({
                content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏',
                ephemeral: true
            });
        }
    }
};