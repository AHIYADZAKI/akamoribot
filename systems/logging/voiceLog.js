const { EmbedBuilder } = require('discord.js');
const config = require('../../config');
const { formatDuration } = require('../../utils/time');

module.exports = {
    logVoiceJoin: async (member, channel) => {
        try {
            const logChannel = member.guild.channels.cache.get(config.channels.voiceLog);
            if (!logChannel) return;

            const embed = new EmbedBuilder()
                .setColor(config.colors.success)
                .setTitle('üîä –í—Ö–æ–¥ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª')
                .addFields(
                    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: member.user.tag, inline: true },
                    { name: '–ö–∞–Ω–∞–ª', value: channel.toString(), inline: true }
                )
                .setFooter({ text: `ID: ${member.user.id}` })
                .setTimestamp();

            await logChannel.send({ embeds: [embed] });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ voiceJoinLog:', error);
        }
    },

    logVoiceLeave: async (member, channel) => {
        try {
            const logChannel = member.guild.channels.cache.get(config.channels.voiceLog);
            if (!logChannel) return;

            const embed = new EmbedBuilder()
                .setColor(config.colors.error)
                .setTitle('üîá –í—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
                .addFields(
                    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: member.user.tag, inline: true },
                    { name: '–ö–∞–Ω–∞–ª', value: channel.toString(), inline: true }
                )
                .setFooter({ text: `ID: ${member.user.id}` })
                .setTimestamp();

            await logChannel.send({ embeds: [embed] });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ voiceLeaveLog:', error);
        }
    },

    logVoiceMove: async (member, oldChannel, newChannel) => {
        try {
            const logChannel = member.guild.channels.cache.get(config.channels.voiceLog);
            if (!logChannel) return;

            const embed = new EmbedBuilder()
                .setColor(config.colors.info)
                .setTitle('üîÄ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º')
                .addFields(
                    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: member.user.tag, inline: true },
                    { name: '–ò–∑ –∫–∞–Ω–∞–ª–∞', value: oldChannel.toString(), inline: true },
                    { name: '–í –∫–∞–Ω–∞–ª', value: newChannel.toString(), inline: true }
                )
                .setFooter({ text: `ID: ${member.user.id}` })
                .setTimestamp();

            await logChannel.send({ embeds: [embed] });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ voiceMoveLog:', error);
        }
    }
};